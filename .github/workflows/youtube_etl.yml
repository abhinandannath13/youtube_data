name: YouTube Trending Daily ETL

on:
  schedule:
    - cron: '30 2 * * *'  # Runs daily at 2:30 AM UTC
  workflow_dispatch:      # Enables manual trigger from GitHub UI

jobs:
  run-etl:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - uses: actions/checkout@v4

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Install Python dependencies
      - name: Install dependencies
        run: pip install requests pandas pyodbc python-dotenv

      # Install ODBC Driver for SQL Server
      - name: Install ODBC Driver 17 (SQL Server driver)
        run: |
          sudo curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
          sudo curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
          sudo apt-get update
          sudo ACCEPT_EULA=Y apt-get install -y msodbcsql17 unixodbc-dev

      # Login to Azure using Managed Identity + Federated Credentials
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          auth-type: identity

      # Run scraper and create CSV in GitHub runner workspace
      - name: Scrape YouTube Trending Data and Save CSV
        env:
          API_KEY: ${{ secrets.API_KEY }}
        run: |
          echo "ðŸ“¥ Running scraper to fetch YouTube trending data..."
          python scraper.py
          echo "âœ… Scraper completed â€” created file: youtube_trending_videos.csv"
          ls -l youtube_trending_videos.csv

      # Load CSV and insert data into Azure SQL
      - name: Insert Data into Azure SQL from CSV
        env:
          AZURE_SQL_SERVER: ${{ secrets.AZURE_SQL_SERVER }}
          AZURE_SQL_DATABASE: ${{ secrets.AZURE_SQL_DATABASE }}
        run: |
          echo "ðŸ“¤ Starting data insert from youtube_trending_videos.csv..."
          python data_insert.py
          echo "âœ… Insert completed successfully."
